error[E0599]: the method `clone_as_arc` exists for struct `Handle<MutFoo>`, but its trait bounds were not satisfied
  --> tests/invalid-handle-code/mut-clone-handle.rs:13:15
   |
8  | pub struct MutFoo;
   | ----------------- doesn't satisfy 5 bounds
...
13 |     let r = h.clone_as_arc();
   |               ^^^^^^^^^^^^ method cannot be called on `Handle<MutFoo>` due to unsatisfied trait bounds
   |
   = note: the following trait bounds were not satisfied:
           `<MutFoo as HandleDescriptor>::Mutable = False`
           `<MutFoo as handle::private::HandleOps<_, False, _>>::From = Arc<_>`
           `MutFoo: handle::private::SharedHandleOps<_, _>`
           `MutFoo: handle::private::SharedHandle`
           which is required by `MutFoo: handle::private::SharedHandleOps<_, _>`
           `MutFoo: handle::private::HandleOps<_, False, _>`
           which is required by `MutFoo: handle::private::SharedHandleOps<_, _>`
note: the traits `handle::private::SharedHandle`, `handle::private::HandleOps`,  and `handle::private::SharedHandleOps` must be implemented
  --> src/handle.rs
   |
   |     pub trait SharedHandle {}
   |     ^^^^^^^^^^^^^^^^^^^^^^
...
   |     pub trait HandleOps<T: ?Sized, M, S> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
   |     pub trait SharedHandleOps<T: ?Sized, S>: HandleOps<T, False, S> + SharedHandle {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0271]: type mismatch resolving `<MutFoo as HandleDescriptor>::Mutable == False`
  --> tests/invalid-handle-code/mut-clone-handle.rs:12:41
   |
12 |     let h: Handle<MutFoo> = Arc::new(s).into();
   |                                         ^^^^ expected `False`, found `True`
   |
   = note: required for `Handle<MutFoo>` to implement `From<Arc<Foo>>`
   = note: required for `Arc<Foo>` to implement `Into<Handle<MutFoo>>`

error[E0599]: the method `clone_handle` exists for struct `Handle<MutFoo>`, but its trait bounds were not satisfied
  --> tests/invalid-handle-code/mut-clone-handle.rs:14:15
   |
8  | pub struct MutFoo;
   | ----------------- doesn't satisfy 5 bounds
...
14 |     let h = h.clone_handle();
   |               ^^^^^^^^^^^^
   |
   = note: the following trait bounds were not satisfied:
           `<MutFoo as HandleDescriptor>::Mutable = False`
           `<MutFoo as handle::private::HandleOps<_, False, _>>::From = Arc<_>`
           `MutFoo: handle::private::SharedHandleOps<_, _>`
           `MutFoo: handle::private::SharedHandle`
           which is required by `MutFoo: handle::private::SharedHandleOps<_, _>`
           `MutFoo: handle::private::HandleOps<_, False, _>`
           which is required by `MutFoo: handle::private::SharedHandleOps<_, _>`
note: the traits `handle::private::SharedHandle`, `handle::private::HandleOps`,  and `handle::private::SharedHandleOps` must be implemented
  --> src/handle.rs
   |
   |     pub trait SharedHandle {}
   |     ^^^^^^^^^^^^^^^^^^^^^^
...
   |     pub trait HandleOps<T: ?Sized, M, S> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
   |     pub trait SharedHandleOps<T: ?Sized, S>: HandleOps<T, False, S> + SharedHandle {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
